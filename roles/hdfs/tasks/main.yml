---
# file: /roles/hdfs/tasks/main.yml

- name: Create hdfs target dir on remote node
  file: path={{ hadoop_install_dir }} state=directory recurse=yes owner={{ hadoop_user }} group={{ hadoop_user }} mode=0755
  
- name: Create dir 'dfs.name.dir' on remote node
  file: path={{ dfs_name_dir }} state=directory recurse=yes owner={{ hadoop_user }} group={{ hadoop_user }} mode=0755
  
- name: Create dir 'dfs.data.dir' on remote node
  file: path={{ dfs_data_dir }} state=directory recurse=yes owner={{ hadoop_user }} group={{ hadoop_user }} mode=0755
  
- name: Create dir 'dfs.namenode.checkpoint.dir' on remote node
  file: path={{ dfs_namenode_checkpoint_dir }} state=directory recurse=yes owner={{ hadoop_user }} group={{ hadoop_user }} mode=0755
  
- name: Install the package unzip via apt package manage
  sudo: yes
  apt: name=unzip state=present
  
- name: Push Hadoop tar ball to target node and untar
  unarchive: src={{ hadoop_tar_src }} dest="{{ hadoop_install_dir }}/" copy=yes

# - name: Push hadoop tar ball to target node
#  copy: src={{ hadoop_tar_src }} dest="{{ hadoop_install_dir }}/" owner={{ hadoop_user }} group={{ hadoop_user }} mode=0664

#- name: Untar Hadoop tar ball, overwriting the previous dir
#  command: tar xvf {{ hadoop_tar_src }} -C {{ hadoop_install_dir }} --strip-components 1 --overwrite --overwrite-dir 
  
- name: Create conf file '/conf/core-site.xml'
  template: src=core-site.xml.j2 dest={{ hadoop_home_dir }}/conf/core-site.xml owner={{ hadoop_user }} group={{ hadoop_user }} mode=0755
  
- name: Create conf file '/conf/hadoop-env.sh'
  template: src=hadoop-env.sh.j2 dest={{ hadoop_home_dir }}/conf/hadoop-env.sh owner={{ hadoop_user }} group={{ hadoop_user }} mode=0755
  
- name: Create conf file '/conf/hadoop.metrics2.properties'
  template: src=hadoop.metrics2.properties.j2 dest={{ hadoop_home_dir }}/conf/hadoop.metrics2.properties owner={{ hadoop_user }} group={{ hadoop_user }} mode=0755
  
- name: Create conf file '/conf/hdfs-site.xml'
  template: src=hdfs-site.xml.j2 dest={{ hadoop_home_dir }}/conf/hdfs-site.xml owner={{ hadoop_user }} group={{ hadoop_user }} mode=0755
  
- name: Create conf file '/conf/masters'
  template: src=masters.j2 dest={{ hadoop_home_dir }}/conf/masters owner={{ hadoop_user }} group={{ hadoop_user }} mode=0755
  
- name: Create conf file '/conf/slaves'
  template: src=slaves.j2 dest={{ hadoop_home_dir }}/conf/slaves owner={{ hadoop_user }} group={{ hadoop_user }} mode=0755
